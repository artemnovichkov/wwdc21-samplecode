/*
See LICENSE folder for this sampleâ€™s licensing information.

Abstract:
Headers for the driver, which manages communications between
            user clients and the audio device.
*/

#ifndef SimpleAudioDriver_h
#define SimpleAudioDriver_h

#include <Availability.h>
#include <DriverKit/IOService.iig>
#include <AudioDriverKit/IOUserAudioDriver.iig>

using namespace AudioDriverKit;

class SimpleAudioDriver: public IOUserAudioDriver
{
public:
	virtual bool init() override;
	
	virtual void free() override;
	
	virtual kern_return_t Start(IOService * provider) override;
	
	virtual kern_return_t Stop(IOService * provider) override;
	
	virtual kern_return_t NewUserClient(uint32_t in_type,
										IOUserClient** out_user_client) override;
	
public:
	virtual kern_return_t StartDevice(IOUserAudioObjectID in_object_id,
									  IOUserAudioStartStopFlags in_flags) override;
	
	virtual kern_return_t StopDevice(IOUserAudioObjectID in_object_id,
									 IOUserAudioStartStopFlags in_flags) override;
	
public:
	kern_return_t HandleToggleDataSource() LOCALONLY;

	kern_return_t HandleTestConfigChange() LOCALONLY;
};

#endif /* SimpleAudioDriver_h */
